{"version":3,"sources":["components/post-card/styles.module.scss","pages/index/styles.module.scss","logo.svg","components/post-card/index.js","pages/index/index.js","pages/post/index.js","components/scroll-to-top/index.js","App.js","serviceWorker.js","index.js","pages/post/styles.module.scss"],"names":["module","exports","PostCard","console","log","backgroundImage","this","props","img","to","tag","className","styles","join","src","title","date","React","Component","Index","state","posts","fetch","then","content","json","setState","map","x","Post","match","params","text","target","class","href","encodeURIComponent","window","location","dangerouslySetInnerHTML","__html","ScrollToTop","prevProps","scrollTo","children","withRouter","App","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ebf41357.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-card\":\"styles_post-card__10CLf\",\"post\":\"styles_post__Da1dy\",\"description\":\"styles_description__1xKdP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"index\":\"styles_index__1Y_7R\",\"list\":\"styles_list__2zl3S\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './styles.module.scss';\n\nclass PostCard extends React.Component{\n    render(){\n        console.log({backgroundImage: this.props.img});\n        return (\n            <Link to={\"/post/\" + this.props.tag}>\n                <div className={styles['post-card'] + \" \" + [\"col-xl-3\", \"col-lg-4\", \"col-md-6\", 'col-sm-6', 'col-12'].join(\" \")}>\n                    <div className={styles['post']}>\n                        <img src={this.props.img}></img>\n                        {/* <div style={{width: \"100%\", height: \"100px\"}}></div> */}\n                        <div className={styles['description']}>\n                            <h4>{this.props.title}</h4>\n                            <h7>{this.props.date}</h7>\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        )\n    }\n}\n\nexport default PostCard;","import React from 'react';\n\nimport styles from './styles.module.scss';\n\nimport PostCard from 'components/post-card';\n\nclass Index extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            posts: []\n        }\n    }\n\n    componentDidMount(){\n        fetch('/blog/posts.json')\n        .then((content)=>{\n            return content.json();\n        })\n        .then((posts)=>{\n            console.log(posts)\n            this.setState({\n                posts: posts\n            })\n        })\n    }\n\n    render(){\n        var posts = this.state.posts.map(x=>(<PostCard title={x['title']} date={x['date']} img={x['img']} tag={x['tag']}/>))\n        return (\n            <div className={styles['index']}>\n                <h1>George Thomas Shanti - Blog</h1>\n                <div className={styles['list'] + \" col-11\"}>\n                    {posts}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Index;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport styles from './styles.module.scss';\n\nclass Post extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {title:'', date:'', content:'', img: ''}\n    }\n\n    componentDidMount(){\n        const { tag } = this.props.match.params\n        fetch(`/blog/posts/${tag}.html`)\n        .then((content) => {\n            return content.text();\n        })\n        .then((content)=>{\n            this.setState({content: content})\n        })\n        fetch(`/blog/posts.json`)\n        .then((content) => {\n            return content.json();\n        })\n        .then((posts)=>{\n            for(var x of posts){\n                console.log(x);\n                if(x['tag']==tag){\n                    this.setState({title: x['title'], date: x['date'], img: x['img']});\n                    break;\n                }\n            }\n        })\n    }\n\n    render(){\n        return (\n            <div className={styles['post-container']}>\n                <span className={styles[\"back\"]}><Link to=\"/\">&#8592;</Link></span>\n                <div className={styles['post']}>\n                    <img src={this.state.img}></img>\n                    <div className={styles['content']}>\n                        <div className={styles['header']}>\n                            <h1>{this.state.title}</h1>\n                            <div className={styles['social']}><h7>\n                                <a target=\"_blank\" class=\"twitter-share-button\" href={\"https://twitter.com/intent/tweet?text=\" + encodeURIComponent(this.state.title+\"\\n\"+ window.location)}><i className=\"fab fa-twitter\"></i></a>\n                                <a target=\"_blank\" href={\"https://www.facebook.com/sharer/sharer.php?u=\" + window.location + \"&t=\" + this.state.title}><i className=\"fab fa-facebook-square\"></i></a>\n                                </h7></div>\n                        </div>\n                        <h7>{this.state.date}</h7>\n                        <div dangerouslySetInnerHTML={{__html: this.state.content}}></div>\n                        <br/>\n                        <div className={styles['footer']}>\n                            <div className={styles['name']}>\n                                George Thomas Shanti<br/>\n                                <span className={styles['designation']}>Software Engineer, Savemo</span>\n                            </div>\n                            <img src=\"/blog/george.jpg\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Post;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass ScrollToTop extends React.Component {\n\tcomponentDidUpdate(prevProps) {\n\t  if (this.props.location !== prevProps.location) {\n\t\twindow.scrollTo(0, 0)\n\t  }\n\t}\n  \n\trender() {\n\t  return this.props.children\n\t}\n  }\n  \n  export default withRouter(ScrollToTop)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport Index from 'pages/index';\nimport Post from 'pages/post';\n\nimport ScrollToTop from 'components/scroll-to-top';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <ScrollToTop>\n          <Switch>\n            <Route path=\"/post/:tag\" component={Post} />\n            <Route path=\"/\" component={Index} />\n          </Switch>\n        </ScrollToTop>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post-container\":\"styles_post-container__2qd3I\",\"back\":\"styles_back__2HTr3\",\"post\":\"styles_post__11nBO\",\"content\":\"styles_content__1zCbM\",\"header\":\"styles_header__3k1HX\",\"social\":\"styles_social__2cMMz\",\"footer\":\"styles_footer__1zQm_\",\"name\":\"styles_name__2Kac9\",\"designation\":\"styles_designation__1lU6F\"};"],"sourceRoot":""}